version: '3'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.production
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    restart: always
    networks:
      - expertconnect-network

  redis:
    image: redis:6
    restart: always
    networks:
      - expertconnect-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    env_file:
      - .env.production
    restart: always
    networks:
      - expertconnect-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    depends_on:
      - backend
    restart: always
    networks:
      - expertconnect-network

  nginx:
    image: nginx:1.21
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      - backend
      - frontend
    restart: always
    networks:
      - expertconnect-network

networks:
  expertconnect-network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
